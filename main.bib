@inproceedings{michon_amstramgrame_2021,
 abstract = {Amstramgrame is a music technology STEAM (Science Technology Engineering Arts and Mathematics) project aiming at making more tangible abstract scientific concepts through the programming of a Digital Musical Instrument (DMI): the Gramophone. Various custom tools ranging from online programming environments to the Gramophone itself have been developed as part of this project. An innovative method anchored in the reality of the field as well as a wide range of key-turn pedagogical scenarios are also part of the Amtramgrame toolkit. This article presents the tools and the method of Amstramgrame as well as the results of its pilot phase. Future directions along with some insights on the implementation of this kind of project are provided as well.},
 address = {Shanghai, China},
 articleno = {60},
 author = {Michon, Romain and Dumitrascu, Catinca and Chudet, Sandrine and Orlarey, Yann and Letz, Stéphane and Fober, Dominique},
 booktitle = {Proceedings of the International Conference on New Interfaces for Musical Expression},
 doi = {10.21428/92fbeb44.a84edd3f},
 issn = {2220-4806},
 month = {June},
 presentation-video = {https://youtu.be/KTgl4suQ_Ks},
 title = {Amstramgrame: Making Scientific Concepts More Tangible Through Music Technology at School},
 url = {https://nime.pubpub.org/pub/3zeala6v},
 year = {2021}
}

@article{sharmin_creativity_2021,
author = {Sharmin, Sadia},
title = {Creativity in CS1: A Literature Review},
year = {2021},
issue_date = {June 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {2},
url = {https://doi.org/10.1145/3459995},
doi = {10.1145/3459995},
abstract = {Computer science is a fast-growing field in today’s digitized age, and working in this industry often requires creativity and innovative thought. An issue within computer science education, however, is that large introductory programming courses often involve little opportunity for creative thinking within coursework. The undergraduate introductory programming course (CS1) is notorious for its poor student performance and retention rates across multiple institutions. Integrating opportunities for creative thinking may help combat this issue by adding a personal touch to course content, which could allow beginner CS students to better relate to the abstract world of programming. Research on the role of creativity in computer science education (CSE) is an interesting area with a lot of room for exploration due to the complexity of the phenomenon of creativity as well as the CSE research field being fairly new compared to some other education fields where this topic has been more closely explored.To contribute to this area of research, this article provides a literature review exploring the concept of creativity as relevant to computer science education and CS1 in particular. Based on the review of the literature, we conclude creativity is an essential component to computer science, and the type of creativity that computer science requires is in fact, a teachable skill through the use of various tools and strategies. These strategies include the integration of open-ended assignments, large collaborative projects, learning by teaching, multimedia projects, small creative computational exercises, game development projects, digitally produced art, robotics, digital story-telling, music manipulation, and project-based learning. Research on each of these strategies and their effects on student experiences within CS1 is discussed in this review. Last, six main components of creativity-enhancing activities are identified based on the studies about incorporating creativity into CS1. These components are as follows: Collaboration, Relevance, Autonomy, Ownership, Hands-On Learning, and Visual Feedback. The purpose of this article is to contribute to computer science educators’ understanding of how creativity is best understood in the context of computer science education and explore practical applications of creativity theory in CS1 classrooms. This is an important collection of information for restructuring aspects of future introductory programming courses in creative, innovative ways that benefit student learning.},
journal = {ACM Trans. Comput. Educ.},
month = nov,
articleno = {16},
numpages = {26},
keywords = {Creativity, literature review}
}

@article{aaron_sonic_2016,
author = {Sam Aaron},
title = {Sonic Pi – performance in education, technology and art},
journal = {International Journal of Performance Arts and Digital Media},
volume = {12},
number = {2},
pages = {171--178},
year = {2016},
publisher = {Routledge},
doi = {10.1080/14794713.2016.1227593},
URL = {https://doi.org/10.1080/14794713.2016.1227593},
eprint = {https://doi.org/10.1080/14794713.2016.1227593}
}

@incollection{malone_making_1987,
  title        = {Making Learning Fun: A Taxonomy of Intrinsic Motivations for Learning},
  author       = {Thomas W. Malone and Mark R. Lepper},
  year         = 1987,
  booktitle    = {Aptitude, Learning, and Instruction: Volume 3: Conative and Affective Process Analyses},
  publisher    = {Taylor \& Francis},
  series       = {Aptitude, Learning, and Instruction},
  volume       = 3,  
  pages        = {223-253},
  editor       = {Snow, R.E. and Farr, M.J.},
}


@article{waite_teaching_2021,
  title={Teaching programming in schools: A review of approaches and strategies},
  author={Waite, Jane and Sentance, Sue},
  journal={Raspberry Pi Foundation},
  pages={1--53},
  year={2021},
  url = {https://www.raspberrypi.org/app/uploads/2021/11/Teaching-programming-in-schools-pedagogy-review-Raspberry-Pi-Foundation.pdf}
}

@article{sharmin_creativity_2021,
author = {Sharmin, Sadia},
title = {Creativity in CS1: A Literature Review},
year = {2021},
issue_date = {June 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {2},
url = {https://doi.org/10.1145/3459995},
doi = {10.1145/3459995},
abstract = {Computer science is a fast-growing field in today’s digitized age, and working in this industry often requires creativity and innovative thought. An issue within computer science education, however, is that large introductory programming courses often involve little opportunity for creative thinking within coursework. The undergraduate introductory programming course (CS1) is notorious for its poor student performance and retention rates across multiple institutions. Integrating opportunities for creative thinking may help combat this issue by adding a personal touch to course content, which could allow beginner CS students to better relate to the abstract world of programming. Research on the role of creativity in computer science education (CSE) is an interesting area with a lot of room for exploration due to the complexity of the phenomenon of creativity as well as the CSE research field being fairly new compared to some other education fields where this topic has been more closely explored.To contribute to this area of research, this article provides a literature review exploring the concept of creativity as relevant to computer science education and CS1 in particular. Based on the review of the literature, we conclude creativity is an essential component to computer science, and the type of creativity that computer science requires is in fact, a teachable skill through the use of various tools and strategies. These strategies include the integration of open-ended assignments, large collaborative projects, learning by teaching, multimedia projects, small creative computational exercises, game development projects, digitally produced art, robotics, digital story-telling, music manipulation, and project-based learning. Research on each of these strategies and their effects on student experiences within CS1 is discussed in this review. Last, six main components of creativity-enhancing activities are identified based on the studies about incorporating creativity into CS1. These components are as follows: Collaboration, Relevance, Autonomy, Ownership, Hands-On Learning, and Visual Feedback. The purpose of this article is to contribute to computer science educators’ understanding of how creativity is best understood in the context of computer science education and explore practical applications of creativity theory in CS1 classrooms. This is an important collection of information for restructuring aspects of future introductory programming courses in creative, innovative ways that benefit student learning.},
journal = {ACM Trans. Comput. Educ.},
month = nov,
articleno = {16},
numpages = {26},
keywords = {literature review, Creativity}
}

@article{petri_sonicpi_2022,
title = {Programming music with Sonic Pi promotes positive attitudes for beginners},
journal = {Computers \& Education},
volume = {179},
pages = {104409},
year = {2022},
issn = {0360-1315},
doi = {https://doi.org/10.1016/j.compedu.2021.104409},
url = {https://www.sciencedirect.com/science/article/pii/S0360131521002864},
author = {Christopher Petrie},
keywords = {Interdisciplinary projects, Applications in subject areas, Improving classroom teaching},
abstract = {Programming is often misaligned with beginner students' interests and viewed as difficult. However, most students and teachers are not aware that it is possible to utilise domain-specific programming languages that combine programming with other domains like music making. Sonic Pi is one free domain-specific programming platform that enables beginners to code music, which has been designed for and used in schools since its first release in 2012. However, there is a lack of academic research on the Sonic Pi platform about the extent it may affect beginner student attitudes towards programming in a school context. The aim of this study was to investigate the extent Sonic Pi may help to promote positive attitudes towards programming. A mixed-methods case study was developed and trialled in school time with a middle school class, which measured student attitudes with the three subscales of enjoyment, importance, and anxiety. Overall, the results confirmed an alternative hypothesis that all students’ subscales for programming attitude increased significantly. While these findings are not generalisable due to its limited scope, they are very positive to inform the design and use of platforms like Sonic Pi in comparison to similar music coding platforms like EarSketch and TunePad.}
}


@INPROCEEDINGS{delzanno_sonicpi_2025,
  author={Delzanno, Giorgio and Guerrini, Giovanna and Traversaro, Daniele},
  booktitle={2025 33rd Euromicro International Conference on Parallel, Distributed, and Network-Based Processing (PDP)}, 
  title={Exploring Student Misconceptions about Concurrency Using Sonic Pi}, 
  year={2025},
  volume={},
  number={},
  pages={364-371},
  keywords={Concurrent computing;Computer languages;Codes;Multithreading;Federated learning;Education;Computer science education;Programming profession;Computer Science Education;Concurrent Programming;Concurrency Education;Multithreading;Misconception in programming},
  doi={10.1109/PDP66500.2025.00058}}


@article{traversaro_hearplay_2024,
  title = {``{{Hear}}'' and ``{{Play}}'' {{Students Misconceptions}} on {{Concurrent Programming}} Using {{Sonic Pi}}},
  author = {Traversaro, Daniele and Delzanno, Giorgio and Guerrini, Giovanna},
  year = {2024},
  journal = {Informatics in Education},
  volume = {23},
  number = {3},
  pages = {679--718},
  publisher = {{Vilnius University Institute of Data Science and Digital Technologies}},
  issn = {1648-5831},
  doi = {10.15388/infedu.2024.22}
}



@book{blackwell_livecoding_2022,
  title = {Live {{Coding}}: {{A User}}'s {{Manual}}},
  author = {Blackwell, Alan F. and Cocker, Emma and Cox, Geoff and McLean, Alex and Magnusson, Thor},
  year = {2022},
  publisher = {MIT Press}
}


@article{armitage_spaces_2018,
  title={Spaces to fail in: negotiating gender, community and Technology in Algorave},
  author={Armitage, Joanne Louise},
  journal={Dancecult: Journal of Electronic Dance Music Culture},
  volume={10},
  number={1},
  year={2018}
}

@article{magerko_earsketch_2016,
  title={Earsketch: A steam-based approach for underrepresented populations in high school computer science education},
  author={Magerko, Brian and Freeman, Jason and Mcklin, Tom and Reilly, Mike and Livingston, Elise and Mccoid, Scott and Crews-Brown, Andrea},
  journal={ACM Transactions on Computing Education (TOCE)},
  volume={16},
  number={4},
  pages={1--25},
  year={2016},
  publisher={ACM New York, NY, USA}
}

@article{freeman_earsketch_2019,
  title={EarSketch: engaging broad populations in computing through music},
  author={Freeman, Jason and Magerko, Brian and Edwards, Doug and Mcklin, Tom and Lee, Taneisha and Moore, Roxanne},
  journal={Communications of the ACM},
  volume={62},
  number={9},
  pages={78--85},
  year={2019},
  publisher={ACM New York, NY, USA}
}

@inproceedings{engelman_earsketch_2017,
  title={Creativity in authentic STEAM education with EarSketch},
  author={Engelman, Shelly and Magerko, Brian and McKlin, Tom and Miller, Morgan and Edwards, Doug and Freeman, Jason},
  booktitle={Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
  pages={183--188},
  year={2017}
}


@article{petrie_ct_2024,
  title = {Design and Use of Domain-Specific Programming Platforms: Interdisciplinary Computational Thinking with {{EarSketch}} and {{TunePad}}},
  author = {Petrie, Christopher},
  year = {2024},
  journal = {Computer Science Education},
  volume = {34},
  number = {4},
  eprint = {https://doi.org/10.1080/08993408.2023.2240657},
  pages = {645--678},
  publisher = {Routledge},
  doi = {10.1080/08993408.2023.2240657}
}
